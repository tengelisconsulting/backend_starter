#!/bin/bash

FILE=${BASH_SOURCE[0]:-${(%):-%x}}
ENV_DIR="$( cd "$( dirname "${FILE}" )" >/dev/null 2>&1 && pwd )"
source ${ENV_DIR}/secrets.env
source ${ENV_DIR}/shared.env


export MODE="dev"

# pipes
export EZ_PIPE_HOST="localhost"
export EZ_INPUT_HOST="${EZ_PIPE_HOST}"

# postgres
export PGHOST="localhost"

# postgrest
export PGST_HOST="localhost"

# gateway
export GATEWAY_PORT="8000"
export GATEWAY_HOST="localhost"
export LUA_CODE_CACHE="on"
export NEW_USER_RATE="1000"
export LOGIN_RATE="1000"
export GATEWAY_LOG_LEVEL="info"

# tokens
export TOKEN_EXPIRE_S="3600"


# monitor
export MON_RELOAD_INTERVAL_S="300"

# dev stuff
export DB_DIRNAME="/home/liam/tmp/_onward_db"


# versions
if [[ "${DEV_IMAGE_VSN}" == "" ]]; then
    DEV_IMAGE_VSN="latest"
fi
export GATEWAY_VSN="${DEV_IMAGE_VSN}"
export HTTP_MAP_W_VSN="${DEV_IMAGE_VSN}"
export DB_W_VSN="${DEV_IMAGE_VSN}"

# convenience
onward_encrypt() {
    IN_FILE="${1}"
    OUT_FILE="${1}.enc"
    docker run --rm --net=host \
           -v "${IN_FILE}:/in/file" \
           tengelisconsulting/crypto \
           symmetric encrypt_file \
           --key="${ONWARD_TEST_KEY}" \
           --file_name=/in/file > "${OUT_FILE}"
}
onward_decrypt() {
    IN_FILE="${1}.enc"
    OUT_FILE="${1}"
    docker run --rm --net=host \
           -v "${IN_FILE}:/in/file" \
           tengelisconsulting/crypto \
           symmetric decrypt_file \
           --key="${ONWARD_TEST_KEY}" \
           --file_name=/in/file > "${OUT_FILE}"
}
